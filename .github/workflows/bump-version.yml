# This workflow bumps version and creates new tag on each push to master.
# Before editing this, temp get rid of pushing to master (change ref of Check out repo to ur branch name)
# Also, delete `git push --tags` to prevent accidentally pushing extra tags.
name: Bump version
# Controls when the workflow will run
on:
    # Triggers the workflow on push events but only for the master branch
    push:
        branches: [master, test-auto-release]
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Check out repo
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: test-auto-release
            - name: Get version
              shell: bash
              run: echo "##[set-output name=version;]$(echo $(git describe --tags --abbrev=0))" # Last created tag (but not necessarily for this branch)
              id: extract_version

            - name: Get commit messages
              shell: bash
              run: echo "##[set-output name=commits;]$(echo $(git log --format=%B --reverse --no-merges test-auto-release ^${{steps.extract_version.outputs.version}}))"
              id: extract_commits
            - name: Bump Version
              # Only bump version if there isn't already a tag on the latest commit.
              if: ${{ steps.extract_commits.outputs.commits != '' }}
              run: |
                  git config --global user.email "gaolauro@gmail.com"
                  git config --global user.name "laurgao"
                  echo "${{steps.extract_version.outputs.version}}"
                  echo "${{steps.extract_commits.outputs.commits}}"
                  npm version patch -m "Bump version to %s"  # The commit message
                  git push

            - name: Publish release
              if: ${{ steps.extract_commits.outputs.commits != '' }}
              run: |
                  branch=$(git rev-parse --abbrev-ref HEAD)
                  repo_full_name=$(git config --get remote.origin.url | sed 's/.*:\/\/github.com\///;s/.git$//')
                  token=$(git config --global github.token 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)
                  text=${{steps.extract_commits.outputs.commits}}
                  version=$(git describe --tags --abbrev=0)
                  generate_post_data() { "tag_name": "$version", "target_commitish": "$branch", "name": "$version", "body": "$text", "draft": false,"prerelease": false }
                  echo "Create release $version for repo: $repo_full_name branch: $branch"
                  curl --data "$(generate_post_data)" "https://api.github.com/repos/$repo_full_name/releases?access_token=$token"
